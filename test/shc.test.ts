import validator from '../src/index';
import { ErrorCode } from "../src/error";
import { LogLevel } from '../src/log';


// /**
//  * 
//  * Bad paramerters
//  * 
//  */
// test('shc-null', async () => {
//     const result = await validator.validate.shc(null as unknown as string);
//     const errors = result.log.entries( /* warnings + errors (by default) */);
//     expect(errors.length).toBe(1);
//     expect(errors[0].code).toBe(ErrorCode.SHC_DECODE_ERROR);
// });

// test('shc-undefined', async () => {
//     const result = await validator.validate.shc(undefined as unknown as string);
//     const errors = result.log.entries( /* warnings + errors (by default) */);
//     expect(errors.length).toBe(1);
//     expect(errors[0].code).toBe(ErrorCode.SHC_DECODE_ERROR);
// });

// test('shc-number-0', async () => {
//     const result = await validator.validate.shc(0 as unknown as string);
//     const errors = result.log.entries( /* warnings + errors (by default) */);
//     expect(errors.length).toBe(1);
//     expect(errors[0].code).toBe(ErrorCode.SHC_DECODE_ERROR);
// });

// test('shc-number-1', async () => {
//     const result = await validator.validate.shc(1 as unknown as string);
//     const errors = result.log.entries( /* warnings + errors (by default) */);
//     expect(errors.length).toBe(1);
//     expect(errors[0].code).toBe(ErrorCode.SHC_DECODE_ERROR);
// });

// test('shc-object', async () => {
//     const result = await validator.validate.shc({} as unknown as string);
//     const errors = result.log.entries( /* warnings + errors (by default) */);
//     expect(errors.length).toBe(1);
//     expect(errors[0].code).toBe(ErrorCode.SHC_DECODE_ERROR);
// });

// test('shc-boolean', async () => {
//     const result = await validator.validate.shc(true as unknown as string);
//     const errors = result.log.entries( /* warnings + errors (by default) */);
//     expect(errors.length).toBe(1);
//     expect(errors[0].code).toBe(ErrorCode.SHC_DECODE_ERROR);
// });

// test('shc-string-empty', async () => {
//     const result = await validator.validate.shc('');
//     const errors = result.log.entries( /* warnings + errors (by default) */);
//     expect(errors.length).toBe(1);
//     expect(errors[0].code).toBe(ErrorCode.SHC_DECODE_ERROR);
// });

// test('shc-odd-numeric', async () => {
//     const result = await validator.validate.shc('shc:/567629095243206034602924374044603122295953265460346029254077280433602870286471674522280928613331456437653141590640220306450459085643550341424541364037063665417137241236380304375622046737407532323925433443326057360106452929531270742428435038612212767166543710257271367103360770423843702957302267705442226011212570217366730655283405585329236504413304263250357573405756580620344272601227047553252608206561732569340037385550656533653425435958526723662267663452222423735504214204045577675777564132721172732555364461595044565027252052341200327550614367053042387428125776544022676611453308445738315812763266687242703264204200753656112762395561003634096167250373102756033165295272327731732229565031703072673244457674092476772705763657776606705320560762452966297641035823053837762827305312453836323500050429207450252400207345285705440745320736652263292324581256524568753145007725602369640032270370411063702965280725523600395732370452044325387770676941294075391268385209644004105000340527656458037105070741106121540332700925756943672466265339725912247209347768320973750009644107057253271028604553343324415723743658305533683270266770054074432234283265456640405571570545282003457766333369426105416858396662092676056031667166456800581237600532560532617059337262227725724167577324423363706431551144337461332936412628037361353642066130673967680808337035077324097643507769212961446637312260660800573559104359100745697029435273742201437229035426361111356439085569337176645345602020104121362830382605614553636155751126695264065833304361760361702023591172236635305554621203502430126209263033313064341176582');
//     const errors = result.log.entries( /* warnings + errors (by default) */);
//     expect(errors.length).toBe(1);
//     expect(errors[0].code).toBe(ErrorCode.SHC_DECODE_ERROR);
// });

// test('shc-missing-nbf', async () => {
//     const result = await validator.validate.shc('shc:/5676290952432060346029243740446031222959532654603460292540772804336028702864716745222809286133314564376531415906402203064504590856435503414245413640370636654171372412363803043756220467374075323239254334433260573601064529315312707424283950386922127665694171387355095939660704204052296731073633336938034257205862295558331233001038777166267636080841395541597500652165762363362803242857077523526658582376617444074234353670540063112906665422613228352640292109372011450727262071636812536753335269415608620677336633293665702711393658712350003221506043670527213600245663686561216471006042605473454566433839096866267159632861750652682839003372080066667570525511695707700032305625454110642557270710055203654053425620757212212973626505073126384334222255046236103409242350286276246565400069734329316157060844627221115620430063343138573725444435243424404567071132093875665503756225335231652777091065564535235568522034034359060773286930670840760630526326433232504566050968081204110069576024244054360769312575093731055838406068310409083121346209453650295623602560345376577259645669063465391140062674374125572809405820644345224352085906700745232954306267031256693970105611263856386227270452076920067667743755366754546076685272001166575728436638327761347640052736287142087253100958215212032554574337594025296830665930046004122670003471403052735669312100691270702608567270240431117703503644017256716852747075692673364140105970655844435360553600077652053622506159532809104332664000324157625608002045403863523506635357065531200967425758522665432322582131222557092974');
//     const errors = result.log.entries( /* warnings + errors (by default) */);
//     expect(errors.length).toBe(1);
//     expect(errors[0].code).toBe(ErrorCode.SHC_DECODE_ERROR);
// });


// /**
//  * 
//  * Valid
//  * 
//  */
// test('shc-valid', async () => {
//     const result = await validator.validate.shc('shc:/5676290952432060346029243740446031222959532654603460292540772804336028702864716745222809286133314564376531415906402203064504590856435503414245413640370636654171372412363803043756220467374075323239254334433260573601064529295312707424284350386122127671665437102572713671033607704238437029573022677054422260112125702173667306552834055853292365044133042632503575734057565806203442726012270475532526082065617325693400373855506565336534254359585267236622676634522224237355042142040455776757775641327211727325553644615950445650272520523412003275506143670530423874281257765440226766114533084457383158127632666872427032642042007536561127623955610036340961672503731027560331652952723277317322295650317030726732444576740924767727057636577766067053205607624529662976410358230538377628273053124538363235000504292074502524002073452857054407453207366522632923245812565245687531450077256023696400322703704110637029652807255236003957323704520443253877706769412940753912683852096440041050003405276564580371050707411061215403327009257569436724662653397259122472093477683209737500096441070572532710286045533433244157237436583055336832702667700540744322342832654566404055715705452820034577663333694261054168583966620926760560316671664568005812376005325605326170593372622277257241675773244233637064315511443374613329364126280373613536420661306739676808083370350773240976435077692129614466373122606608005735591043591007456970294352737422014372290354263611113564390855693371766453456020201041213628303826056145536361557511266952640658333043617603617020235911722366353055546212035024301262092630333130643411765820');
//     const errors = result.log.entries( /* warnings + errors (by default) */);
//     expect(errors.length).toBe(0);
//     expect(result.signature).toBe(true);
//     expect(result.fhirbundle).toBeDefined();
// });

// test('shc-expired', async () => {
//     const result = await validator.validate.shc('shc:/5676290952432060346029243740446031222959532654603460292540772804336028702864716745222809286133314564376531415906402203064504590856435503414245413640370636654171372412363803043756220467374075323239254334433260573601064131315371707424357641442772411244676941106941305523276638613633295722210867524276770724245930702173660610713134055952292365044133094234777010320036126821225859391026285337252436524056392322757509256165037259561222584055592166055928353828276130747277050304566809423952690457660953086606265621755627380835251234247167106030542166570600561227573404095560744043753511113959627742734139373443706003236729714141234274776221071071252429504343545040204542553000415007345742225625674508644157247510565303434452265632757233253173240676075531283165452034680529105276242573583956383964405671734359355844530771225721363524271159567736352054692329082959252652003422712944743552545521394258087503007208066839740644645877712508710029762575411110675263334260316426567076574141220069005759657522263034284562630612213727095838406067313309073161252804766310383231233040360363031225311235695556101166562162600922093662082728672167247267762357330577642207372923621033266145420535247638366206310368544164530840084012392954326405303068121107440030427037326169356329033058754467777006330443720309284200007223226630313625213825682506113529665561033045397341705873415064422355503470240412764409577422015603002525656450691156627621553320375568214127327242610050302263577245047673107737752433712937245941216276123568541166603412743509715568310433250805647003775837297730584120');
//     const errors = result.log.entries( /* warnings + errors (by default) */);
//     expect(errors.length).toBe(0);
//     expect(result.signature).toBe(true);
//     expect(result.fhirbundle).toBeDefined();
// });



test('shc-valid', async () => {
    const result = await validator.decode.shc('shc:/5676290952432060346029243740446031222959532654603460292540772804336028702864716745222809286133314564376531415906402203064504590856435503414245413640370636654171372412363803043756220467374075323239254334433260573601064529295312707424284350386122127671665437102572713671033607704238437029573022677054422260112125702173667306552834055853292365044133042632503575734057565806203442726012270475532526082065617325693400373855506565336534254359585267236622676634522224237355042142040455776757775641327211727325553644615950445650272520523412003275506143670530423874281257765440226766114533084457383158127632666872427032642042007536561127623955610036340961672503731027560331652952723277317322295650317030726732444576740924767727057636577766067053205607624529662976410358230538377628273053124538363235000504292074502524002073452857054407453207366522632923245812565245687531450077256023696400322703704110637029652807255236003957323704520443253877706769412940753912683852096440041050003405276564580371050707411061215403327009257569436724662653397259122472093477683209737500096441070572532710286045533433244157237436583055336832702667700540744322342832654566404055715705452820034577663333694261054168583966620926760560316671664568005812376005325605326170593372622277257241675773244233637064315511443374613329364126280373613536420661306739676808083370350773240976435077692129614466373122606608005735591043591007456970294352737422014372290354263611113564390855693371766453456020201041213628303826056145536361557511266952640658333043617603617020235911722366353055546212035024301262092630333130643411765820');
    const errors = result.log.entries( /* warnings + errors (by default) */);
    console.log(result.qr);
    expect(errors.length).toBe(0);
    expect(result['jws.compact']).toBeDefined();
    expect(typeof result['jws.compact']).toBe('string');
});